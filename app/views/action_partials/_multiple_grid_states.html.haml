:ruby
  WulinMaster::GridState.create_default(current_user.id, grid.name)
  options = grid_states_options(current_user.id, grid.name)
  default_options, custom_options = options.partition do |option|
    option[0] == 'default'
  end
  current_state = WulinMaster::GridState.current(current_user.id, grid.name)

.grid_states_switcher
  %a.current-view.dropdown-button.btn.grey.lighten-3{"data-activates" => "grid_states", "data-beloworigin" => "true", href: "#"}
    %span= current_state.name
    %i.material-icons.right arrow_drop_down
  %ul#grid_states.dropdown-content
    - options.each do |option|
      %li
        %a.grid-state-item{id: "grid-state-#{option[1]}", "data-state-id" => option[1], href: '#!'}= option[0]
        %a.editable-view.right{"data-state-id" => option[1], "data-state-name" => option[0], href: '#edit-modal'}
          %i.material-icons.right mode_edit
    %li.divider
    %li
      %a{href: '#create-modal'}
        %i.material-icons.left add_box
        ADD VIEW

#create-modal.modal
  .modal-content
    %h5 Create a new view
    .input-field
      %input#view-name-input-create{type: 'text'}
      %label#view-name-label-create{for: 'view-name-input-create'} View Name
  .modal-footer
    #create-btn.btn.right.disabled Create
    .modal-close.btn-flat Cancel

#edit-modal.modal
  .modal-content
    %h5 Edit view
    .input-field
      %input#view-name-input-edit{type: 'text'}
      %label#view-name-label-edit{for: 'view-name-input-edit'} View Name
  .modal-footer
    #update-btn.btn.right.disabled Update
    #delete-btn.btn-flat.red-text.modal-close.right Delete
    .modal-close.btn-flat Cancel

:javascript

  $(function(){

    $('.dropdown-button').dropdown();
    $('.modal').modal();

    var id;
    var oldName;
    var newName;

    $("#view-name-input-create").on('input', function() {
      $('#create-btn').toggleClass('disabled', !$(this).val());
    });

    $("#view-name-input-create").on('keydown', function(e) {
      if(e.keyCode == 13 && !$('#create-btn').hasClass('disabled')) {
        $('#create-btn').click();
      }
    });

    $('#create-btn').on('click', function() {
      var data = {
        grid_name: "#{grid.name}",
        state_name: $("#view-name-input-create").val()
      };

      $.post('/wulin_master/grid_states_manages/create', data, function(response){
        if (response == 'success') {
          $('#create-modal').modal('close');
          location.reload();
        }
      });
    });

    $('.editable-view').on('click', function() {
      id = $(this).attr('data-state-id');
      oldName = $(this).attr('data-state-name');
      $('#view-name-label-edit').addClass('active');
      $('#view-name-input-edit').val(oldName);
    });

    $("#view-name-input-edit").on('keydown', function(e) {
      if(e.keyCode == 13 && !$('#update-btn').hasClass('disabled')) {
        $('#update-btn').click();
      }
    });

    $("#view-name-input-edit").on('input', function() {
      newName = $('#view-name-input-edit').val();
      $('#update-btn').toggleClass('disabled', !newName || oldName == newName);
    });

    $('#update-btn').on('click', function() {
      var data = { id: id, name: newName }
      $.post('/wulin_master/grid_states_manages/update', data, function(response){
        if (response == 'success') {
          $('#grid-state-' + id).html(newName);
          if ("#{current_state.id}" == id) {
            $('.current-view span').html(newName);
          }
          $('#edit-modal').modal('close');
        }
      });
    });

    $('#delete-btn').on('click', function() {
      var data = { id: id }
      $.post('/wulin_master/grid_states_manages/destroy', data, function(response){
        if (response == 'success') {
          $('#edit-modal').modal('close');
          location.reload();
        }
      });
    });

  });
