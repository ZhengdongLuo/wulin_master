- WulinMaster::GridState.create_default(current_user.id, grid.name)

:ruby
  options = grid_states_options(current_user.id, grid.name)
  default_options, custom_options = options.partition do |option|
    option[0] == 'default'
  end
  current_state = WulinMaster::GridState.current(current_user.id, grid.name)

.grid_states_switcher
  %a.current-view.dropdown-button.btn.grey.lighten-3{"data-activates" => "grid_states", "data-beloworigin" => "true", href: "#"}
    = current_state.name
    %i.material-icons.right arrow_drop_down
  %ul#grid_states.dropdown-content
    - options.each do |option|
      %li
        %a.grid-state-view{"data-state-id" => option[1], href: '#!'}= option[0]
        %a.editable-view.right{"data-state-id" => option[1], "data-state-name" => option[0], href: '#edit-modal'}
          %i.material-icons.right mode_edit
    %li.divider
    %li
      %a{href: '#create-modal'}
        %i.material-icons.left add_box
        ADD VIEW

#create-modal.view-modal.modal
  .modal-content
    %h5 Create a new view
    = form_for :grid_states, url: '/wulin_master/grid_states_manages/create', remote: true do |f|
      = hidden_field_tag 'grid_name', grid.name
      .input-field
        = f.label :name, 'View Name'
        = f.text_field :name, required: true
        .modal-footer
          #create-btn.disabled.right= f.submit 'Create', class: 'btn disabled'
          .modal-close.btn-flat Cancel

#edit-modal.modal
  .modal-content
    %h5 Edit view
    .input-field
      %input#view-name-input-edit{type: 'text'}
      %label#view-name-label-edit{for: 'view-name-input-edit'} View Name
  .modal-footer
    #update-btn.btn.right.disabled Update
    #delte-btn.btn-flat.red-text.modal-close.right Delete
    .modal-close.btn-flat Cancel

:javascript

  $(function(){

    $('.dropdown-button').dropdown();
    $('.modal').modal();

    var id;
    var oldName;
    var newName;

    $(".view-modal .input-field input").on('blur', function() {
      if (!!$(this).val()) {
        $('#create-btn').removeClass('disabled');
      }
    });

    $('#create-btn').on('click', function() {
      if (!$(this).hasClass('disabled')) {
        $('#create-modal').modal('close');
        location.reload();
      }
    });

    $('.editable-view').on('click', function() {
      id = $(this).attr('data-state-id');
      oldName = $(this).attr('data-state-name');
      $('#view-name-label-edit').addClass('active');
      $('#view-name-input-edit').val(oldName);
    });

    $("#view-name-input-edit").on('blur', function() {
      newName = $('#view-name-input-edit').val();
      if (!!newName && oldName != newName) {
        $('#update-btn').removeClass('disabled');
      }
    });

    $('#update-btn').on('click', function() {
      var data = { id: id, name: newName }
      $.post('/wulin_master/grid_states_manages/update', data, function(response){
        if (response == 'success') {
          $('#edit-modal').modal('close');
          location.reload();
        }
      });
    });

    /*
    $("a.manage").click(function(){
      $.get('wulin_master/grid_states_manages/manage?' + "grid=#{grid.name}", function(data){
        $('body').append(data);
        var scope = $(".states_manage_form");

        scope.dialog({
          height: 250,
          width: 400,
          show: "blind",
          modal: true,
          close: function(event, ui) {
            scope.dialog('destroy');
            scope.remove();
          }
        });
      });
    });

    $('.grid_states_switcher a.reset').on('click', function(){
      if (confirm('Are you sure that you want to reset the default view?')) {
        $.post('#{wulin_master_grid_states_manages_reset_default_path}', {_method: 'PUT', grid_name: '#{grid.name}', user_id: '#{current_user.id}'}, function(data) {
          if (data == 'ok') {
            load_page(History.getState().url);
          } else {
            displayErrorMessage(data);
          }
        });
      }
    });
    */

  });
